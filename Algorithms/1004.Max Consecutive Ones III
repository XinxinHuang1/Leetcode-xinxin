// Sliding window
// if A[i] ~ A[j] has 0s <= K, continue to increment j (end of the subarray)
// if A[i] ~ A[j] has 0s > K, increament i (start of the subarray)

class Solution {
    public int longestOnes(int[] A, int K) {
        int i = 0, j;
        for(j = 0; j < A.length; ++j){
            if(A[j] == 0)
                K--;
            if(K < 0 && A[i++] == 0)
                K++;
        }
        return j - i;
    }
}